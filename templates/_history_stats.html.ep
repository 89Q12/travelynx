% if (@{$stats->{inconsistencies}}) {
	<div class="row">
		<div class="col s12">
			<div class="card red darken-4">
				<div class="card-content white-text">
					<i class="material-icons small right">warning</i>
					<span class="card-title">Inkonsistente Reisedaten</span>
					<p>
						Die folgenden Abfahrtszeiten liegen vor der Ankunftszeit der
						vorherigen Zugfahrt und wurden bei der Wartezeitberechnung
						ignoriert.
						<ul>
							% for my $date (@{$stats->{inconsistencies}}) {
								<li><%= $date %></li>
							% }
						</ul>
					</p>
				</div>
			</div>
		</div>
	</div>
% }

<div class="row">
	<div class="col s12">
		<table class="striped">
			<tr>
				<th scope="row">Fahrten</th>
				<td><%= $stats->{num_journeys} %></td>
			</tr>
			<tr>
				<th scope="row">ZÃ¼ge</th>
				<td><%= $stats->{num_trains} %></td>
			</tr>
			<tr>
				<th scope="row">Entfernung</th>
				<td>ca. <%= sprintf('%.f', $stats->{km_route}) %> km
					(Luftlinie: <%= sprintf('%.f', $stats->{km_beeline}) %> km)</td>
			</tr>
			<tr>
				<th scope="row">Fahrtzeit</th>
				<td><%= sprintf('%02d:%02d', $stats->{min_travel_real} / 60, $stats->{min_travel_real} % 60) %> Stunden
					(nach Fahrplan: <%= sprintf('%02d:%02d', $stats->{min_travel_sched} / 60, $stats->{min_travel_sched} % 60) %>)<td>
			</tr>
			<tr>
				<th scope="row">Wartezeit (nur Umstiege)</th>
				<td><%= sprintf('%02d:%02d', $stats->{min_interchange_real} / 60, $stats->{min_interchange_real} % 60) %> Stunden
			</tr>
			<tr>
				<th scope="row">Kumulierte VerspÃ¤tung</th>
				<td>Bei Abfahrt: <%= sprintf('%02d:%02d', $stats->{delay_dep} / 60, $stats->{delay_dep} % 60) %> Stunden<br/>
					Bei Ankunft: <%= sprintf('%02d:%02d', $stats->{delay_arr} / 60, $stats->{delay_arr} % 60) %> Stunden</td>
			</tr>
		</table>
	</div>
</div>
